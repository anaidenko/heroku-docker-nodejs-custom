version: 2
jobs:
 build:
   machine: true
   steps:
     - checkout
     - run: touch .env

     # test
     - run: |
         docker-compose -f docker-compose.unittests.yml run --rm --service-ports unittests

     # build image
     - run: |
         docker info
         export TAG="0.0.${CIRCLE_BUILD_NUM}"
         export DOCKER_IMAGE_NAME=${DOCKER_APP_NAME}_web
         docker-compose -f docker-compose.yml -p $DOCKER_APP_NAME build web
         docker tag $DOCKER_IMAGE_NAME $DOCKER_IMAGE_NAME:$TAG

     # deploy image to Docker Hub
     - run: |
         set -eu -o pipefail
         echo $DOCKER_HUB_PASSWORD | docker login --username=$DOCKER_HUB_USERNAME --password-stdin
         docker tag $DOCKER_IMAGE_NAME:$TAG ${DOCKER_HUB_USERNAME}/$DOCKER_IMAGE_NAME:$TAG
         docker push $DOCKER_HUB_USERNAME/$DOCKER_IMAGE_NAME

     # deploy image to Heroku (Registry)
     - run: |
         set -eu -o pipefail
         echo $HEROKU_API_KEY | docker login --username=$HEROKU_USERNAME --password-stdin registry.heroku.com
         docker tag $DOCKER_IMAGE_NAME:$TAG registry.heroku.com/$HEROKU_APP_NAME/web
         docker push registry.heroku.com/$HEROKU_APP_NAME/web

     # release app on Heroku
     - run: |
         docker inspect registry.heroku.com/$HEROKU_APP_NAME/web --format={{.Id}} > WEB_DOCKER_IMAGE_ID_FILE
         export WEB_DOCKER_IMAGE_ID=$(cat WEB_DOCKER_IMAGE_ID_FILE)
         curl -n -X PATCH https://api.heroku.com/apps/$HEROKU_APP_NAME/formation \
            -d '{ "updates": [ { "type": "web", "docker_image": "'"$WEB_DOCKER_IMAGE_ID"'" }]}' \
          -H "Content-Type: application/json" \
          -H "Accept: application/vnd.heroku+json; version=3.docker-releases" \
          -H "Authorization: Bearer $HEROKU_API_KEY"
